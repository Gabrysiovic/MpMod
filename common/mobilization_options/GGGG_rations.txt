GGGG_mo_foraged_rations = {
    texture = "gfx/interface/icons/production_method_icons/GGGG_foraging.dds"
    group   = GGGG_mog_rations
    
    possible = {
        # AI keeps using this when they really shouldn't, and I can't seem to get anything working with the ai_weight
        is_ai = no
    }
    
    upkeep_modifier = {
        goods_input_grain_add = -0.6
        goods_input_meat_add  = -0.4
    }
    
    unit_modifier = {
        unit_devastation_mult         = 0.10
        unit_morale_loss_mult         = 0.25
        unit_recovery_rate_add        = -0.25
        unit_morale_recovery_mult     = -0.25
        unit_occupation_mult          = -0.50
        unit_convoy_requirements_mult = -0.20
    }
    
    ai_weight = {
        value = 0
        # if = {
            # limit = {
                # market ?= {
                    # mg:grain ?= {
                        # market_goods_has_goods_shortage = yes
                    # }
                    # mg:meat  ?= {
                        # market_goods_has_goods_shortage = yes
                    # }
                # }
            # }
            # add = 10
        # }
    }
}

GGGG_mo_bread_meat_rations = {
    texture = "gfx/interface/icons/production_method_icons/GGGG_bread_meat.dds"
    group   = GGGG_mog_rations
    
    possible = {
        always = yes
    }
    
    can_be_turned_off = {
        always = no
    }
    
    upkeep_modifier = {
        goods_input_grain_add = 0.6
        goods_input_meat_add  = 0.4
    }
    
    unit_modifier = {
        # unit_morale_recovery_mult = 0.00001
    }
    
    ai_weight = {
        value = 1
    }
}

GGGG_mo_canned_rations = {
    texture = "gfx/interface/icons/production_method_icons/GGGG_canned_goods.dds"
    group   = GGGG_mog_rations
    
    possible = {
        scope:military_formation = {
            NOT = {
                has_mobilization_option = mobilization_option:GGGG_mo_foraged_rations
            }
        }
        market ?= {
            mg:groceries ?= {
                market_goods_sell_orders > 0
            }
        }
    }
    
    can_be_turned_off = {
        scope:military_formation = {
            NOR = {
                has_mobilization_option = mobilization_option:GGGG_mo_refrigerated_rations
            }
        }
    }
    
    on_activate_while_mobilized = {
        if = { # Allow free changes during first week of game so AI can pick for themselves what they want
            limit = { # b/c otherwise we have to overwrite vanilla military formation histories
                NOT = {
                    has_global_variable = GGGG_free_MOs
                }
            }
            custom_tooltip = {
                text = mobilization_option_it_hurts_organization_to_add_medic_support_tt
                add_organization = {
                    value = organization
                    multiply = -0.25
                }
            }
        }
    }
    
    on_deactivate_while_mobilized = {
        if = {
            limit = {
                NOT = {
                    has_global_variable = GGGG_free_MOs
                }
            }
            custom_tooltip = {
                text = mobilization_option_it_hurts_morale_and_organization_when_you_remove_medic_support_tt
                every_combat_unit = {
                    add_morale = {
                        value = morale
                        multiply = -0.5
                    }
                }
                add_organization = {
                    value = organization
                    multiply = -0.25
                }
            }
        }
    }
    
    unlocking_technologies = {
        canneries
    }
    
    upkeep_modifier = {
        goods_input_groceries_add = 1
        goods_input_grain_add     = -0.6
        goods_input_meat_add      = -0.4
    }
    
    unit_modifier = {
        unit_morale_recovery_mult = 0.00001
    }
    
    ai_weight = {
        value = 10000
        if = { # Push AI towards modernizing
            limit = {
                market ?= {
                    mg:groceries ?= {
                        market_goods_pricier < 0.5
                    }
                }
            }
            multiply = 2
        }
    }
}

GGGG_mo_refrigerated_rations = {
    texture = "gfx/interface/icons/production_method_icons/GGGG_refrigerated.dds"
    group   = GGGG_mog_rations
    
    possible = {
        scope:military_formation = {
            has_mobilization_option = mobilization_option:GGGG_mo_canned_rations
        }
        market ?= {
            mg:fruit ?= {
                market_goods_sell_orders > 0
            }
            mg:meat ?= {
                market_goods_sell_orders > 0
            }
            mg:electricity ?= {
                market_goods_sell_orders > 0
            }
        }
    }
    
    on_activate_while_mobilized = {
        if = {
            limit = {
                NOT = {
                    has_global_variable = GGGG_free_MOs
                }
            }
            custom_tooltip = {
                text = mobilization_option_it_hurts_organization_to_add_medic_support_tt
                add_organization = {
                    value = organization
                    multiply = -0.25
                }
            }
        }
    }
    
    on_deactivate_while_mobilized = {
        if = {
            limit = {
                NOT = {
                    has_global_variable = GGGG_free_MOs
                }
            }
            custom_tooltip = {
                text = mobilization_option_it_hurts_morale_and_organization_when_you_remove_medic_support_tt
                every_combat_unit = {
                    add_morale = {
                        value = morale
                        multiply = -0.5
                    }
                }
                add_organization = {
                    value = organization
                    multiply = -0.25
                }
            }
        }
    }
    
    unlocking_technologies = {
        pasteurization
    }
    
    upkeep_modifier = {
        goods_input_fruit_add       = 0.25
        goods_input_meat_add        = 0.25
        goods_input_groceries_add   = -0.5
        goods_input_electricity_add = 0.1
    }
    
    unit_modifier = {
        unit_morale_recovery_mult = 0.10
    }
    
    ai_weight = {
        value = 20000
    }
}
